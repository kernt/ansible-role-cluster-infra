---
heat_template_version: pike

description: >
  Heat stack containing a Nova instance.

parameters:
  name:
    type: string
    label: Instance name
  flavor:
    type: string
    label: Flavor name or UUID
  image:
    type: string
    label: Image name or UUID
  volume_size:
    type: number
    label: Volume size in GB
  volume_type:
    type: string
    label: Volume type
  key_name:
    type: string
    label: SSH key pair name
  availability_zone:
    type: string
    label: Availability zone
    default: nova
  config_drive:
    type: boolean
    label: Whether to provide metadata via a configdrive
    default: false
  cluster_net:
    type: json
    label: Network names and subnets to which the nodes should be attached
  instance_nodenet:
    type: string
    default: "Cluster::NodeNet1"

resources:
  instance_net:
#   type: Cluster::NodeNet
#   type: { get_param: instance_nodenet }
    type: Cluster::NodeNet1WithFIP
    properties:
      cluster_net: { get_param: cluster_net }

  instance:
    type: OS::Nova::Server
    properties:
      name: { get_param: name }
      flavor: { get_param: flavor }
      image: { get_param: image }
      key_name: { get_param: key_name }
      networks: { get_attr: [ instance_net, networks ] }
      availability_zone: { get_param: availability_zone }
      config_drive: { get_param: config_drive }

outputs:
  OS::stack_id:
    description: ID of the Nova instance
    value: { get_resource: instance }

  instance_data:
    description: ID of the primary IP
    value: { 'name': {get_param: name}, 'ip': {get_attr: [instance_net, primary_ip]}, 'id': {get_resource: instance} } 
